<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seeing.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.seeing.pojo.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="picture" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="gender" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="msg" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="number" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, phone, password, type, email, picture, gender, msg, address, number
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.seeing.pojo.User">
    insert into user (id, name, phone, 
      password, type, email, 
      picture, gender, msg, 
      address, number)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{picture,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{msg,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER})
  </insert>

  <insert id="insertSelective" parameterType="com.seeing.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="number != null">
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.seeing.pojo.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.seeing.pojo.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      msg = #{msg,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPhone" resultType="int">
    select
    count(*)
    from user
    where phone = #{phone}
  </select>

  <select id="selectLogin" resultType="User">
    select
    <include refid="Base_Column_List"/>
    from user
    where phone=#{phone} and password=#{password}
  </select>

  <update id="updateNumber" parameterType="int">
    update user
        set number=number+1
  </update>

  <select id="selectByIdPassword" resultType="int">
    select
    count(*)
    from user
    where id=#{id} and password=#{password}
  </select>

  <update id="updatePwdByPhone">
    update  user
        set password=#{newPassword}
        where phone=#{phone}
  </update>

  <select id="selectAll" resultType="User">
    select
    <include refid="Base_Column_List"/>
    from user
  </select>

  <select id="selectVolunteer" resultType="User">
    select
        <include refid="Base_Column_List"/>
    from user
    where
    type=0
  </select>





</mapper>